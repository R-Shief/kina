---
- name: waiting for ssh
  local_action: wait_for port=22 host="{{ ansible_ssh_host | default(inventory_hostname) }}" search_regex=OpenSSH

- name: format devices
  filesystem: fstype=ext3 dev=/dev/vdb
  become: true

- name: Add runit
  apt: "name={{ item }} state=installed"
  with_items:
    - runit
    - libmozjs185-dev
  become: true

- name: Update apt cache if needed.
  apt: update_cache=yes cache_valid_time=86400
  become: true

- name: Creates directory
  file: path=/home/debian/build state=directory

- name: downloads custom couchdb deb
  get_url:
    dest: /home/debian/build
    url: https://clc.aristotle.ucsb.edu:8773/services/objectstorage/kal3a-debs/couchdb-2.0.0-2.deb
    validate_certs: no

- name: mount devices
  mount:
    name: /opt/couchdb
    src: /dev/vdb
    fstype: ext3
    state: mounted
  become: true

- name: installs custom couchdb deb
  apt:
    deb: /home/debian/build/couchdb-2.0.0-2.deb
  become: true

- name: service directory for couchdb
  file:
    state: directory
    path: /opt/couchdb/etc/sv
    owner: root
    group: root
    mode: 0755
  become: true

- name: runit
  copy:
    content: |
      #!/bin/sh
      exec 2>&1
      exec chpst -u couchdb:couchdb env HOME=/opt/couchdb /opt/couchdb/bin/couchdb
    dest: /opt/couchdb/etc/sv/run
    owner: root
    group: root
    mode: 0755
  become: true

- copy:
    content: |
      #!/bin/sh
      exec chpst -u couchdb:couchdb svlogd -tt /opt/couchdb/var/log
    dest: /opt/couchdb/etc/sv/log/run
    owner: root
    group: root
    mode: 0755
  become: true

- file:
    state: link
    src: /opt/couchdb/etc/sv
    path: /etc/service/couchdb
  become: true

- ini_file: dest=/opt/couchdb/etc/local.ini
            section=chttpd
            option=bind_address
            value='{{ hostvars[ansible_ssh_host]['PrivateIpAddress'] }}'
            backup=yes
  notify: restart couchdb
  become: true

- ini_file: dest=/opt/couchdb/etc/local.ini
            section=admins
            option='{{ couchdb_user }}'
            value='{{ couchdb_password }}'
            backup=yes
  notify: restart couchdb
  become: true

- uri:
    uri: http://localhost:5984/_config/admins/{{ couchdb_user }}
    method: PUT
    body_format: json
    body: '{{ couchdb_password }}'
  ignore_errors: True

- ini_file: dest=/opt/couchdb/etc/local.ini
            section=couch_httpd_auth
            option=require_valid_user
            value=true
            backup=yes
  notify: restart couchdb
  become: true

- uri:
    uri: http://localhost:5984/_cluster_setup
    method: POST
    body_format: json
    body:
      action: finish_cluster
    status_code: 201
  ignore_errors: True


#- name: Get software for Erlang build of CouchDB 2.0.
#  apt: "name={{ item }} state=installed"
#  with_items:
#    - erlang
#    - git
#    - libcurl4-openssl-dev
#    - libicu-dev
#    - libmozjs185-dev
#    - pkg-config
#    - libcerf-doc
#  become: true

#- name: Clone CouchDB repository
#  git: repo=https://github.com/apache/couchdb.git dest=/home/debian/build/couchdb version=2.0.0
#
#- name: Build CouchDB
#  command: ./configure --disable-docs --disable-fauxton chdir=/home/debian/build/couchdb creates=install.mk
#
#- make: chdir=/home/debian/build/couchdb target=release
