---
- name: security group default
  ec2_group:
    name: default
    description: default group
    rules:
      - proto: icmp
        from_port: -1
        to_port: -1
        cidr_ip: 10.1.3.0/24
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 10.1.3.0/24

- name: security group gateway
  ec2_group:
    name: gateway
    description: gateway group
    rules:
      - proto: tcp
        from_port: 22
        to_port: 22
        cidr_ip: 0.0.0.0/0

- name: security group www
  ec2_group:
    name: www
    description: opens web ports
    rules:
      - proto: tcp
        from_port: 80
        to_port: 80
        cidr_ip: 0.0.0.0/0
      - proto: tcp
        from_port: 443
        to_port: 443
        cidr_ip: 0.0.0.0/0

- name: security group couchdb
  ec2_group:
    name: couchdb
    description: couchdb servers
    rules:
      - proto: tcp
        from_port: 5986
        to_port: 5986
        cidr_ip: 10.1.3.0/24
      - proto: tcp
        from_port: 5984
        to_port: 5984
        cidr_ip: 10.1.3.0/24
      - proto: tcp
        from_port: 4369
        to_port: 4369
        cidr_ip: 10.1.3.0/24

- name: security group rabbitmq
  ec2_group:
    name: rabbitmq
    description: services supporting runtime and admin of rabbitmq
    rules:
      - proto: tcp
        from_port: 4369
        to_port: 4369
        cidr_ip: 10.1.3.0/24
      - proto: tcp
        from_port: 5672
        to_port: 5672
        cidr_ip: 10.1.3.0/24
      - proto: tcp
        from_port: 15672
        to_port: 15672
        cidr_ip: 10.1.3.0/24
      - proto: tcp
        from_port: 25672
        to_port: 25672
        cidr_ip: 10.1.3.0/24

- name: security group elasticsearch
  ec2_group:
    name: elasticsearch
    description: services supporting runtime and admin of elasticsearch
    rules:
      - proto: tcp
        from_port: 9200
        to_port: 9200
        cidr_ip: 10.1.3.0/24

- name: security group mysql
  ec2_group:
    name: mysql
    description: services supporting runtime and admin of mysql
    rules:
      - proto: tcp
        from_port: 3306
        to_port: 3306
        cidr_ip: 10.1.3.0/24

- name: security group worker
  ec2_group:
    name: worker
    description: opens worker ports
    rules: []


- name: gateway
  ec2:
    key_name: baba
    instance_type: m1.small
    image: emi-2a255279
    instance_tags:
      gateway: true
      service: gateway
    count_tag:
      gateway: true
    exact_count: 1
    group:
      - gateway
    monitoring: true
    volumes:
      - device_name: /dev/sda
        volume_size: 5
        delete_on_termination: true
  register: ec2

- add_host: groups=tag_gateway_True name={{ item.public_dns_name }}
  with_items: '{{ ec2.instances }}'

- name: couchdb servers
  ec2:
    key_name: baba
    instance_type: m3.xlarge
    image: emi-2a255279
    instance_tags:
      db: couchdb
      service: couchdb
    count_tag:
      db: couchdb
    exact_count: 1
    group:
      - default
      - couchdb
    monitoring: true
    volumes:
      - device_name: /dev/sda
        volume_size: 15
        delete_on_termination: true
      - device_name: /dev/vdb
        volume_size: 100
        delete_on_termination: true
    assign_public_ip: no
  register: ec2

- name: Add new instance to host group
  add_host: groups=tag_db_couchdb name={{ item.public_dns_name }}
  with_items: '{{ ec2.instances }}'

- name: rabbitmq servers
  ec2:
    key_name: baba
    instance_type: m3.xlarge
    image: emi-2a255279
    instance_tags:
      queue: rabbitmq
      service: rabbitmq
    count_tag:
      queue: rabbitmq
    exact_count: 1
    group:
      - default
      - rabbitmq
    monitoring: true
    volumes:
      - device_name: /dev/sda
        volume_size: 15
        delete_on_termination: true
    assign_public_ip: no
  register: ec2

- name: Add new instance to host group
  add_host: groups=tag_queue_rabbitmq name={{ item.public_dns_name }}
  with_items: '{{ ec2.instances }}'

- name: elasticsearch servers
  ec2:
    key_name: baba
    instance_type: m3.xlarge
    image: emi-2a255279
    instance_tags:
      index: elasticsearch
      service: elasticsearch
    count_tag:
      index: elasticsearch
    exact_count: 1
    group:
      - default
      - elasticsearch
    monitoring: true
    volumes:
      - device_name: /dev/sda
        volume_size: 15
        delete_on_termination: true
      - device_name: /dev/vdb
        volume_size: 100
        delete_on_termination: true
    assign_public_ip: no
  register: ec2

- name: Add new instance to host group
  add_host: groups=tag_index_elasticsearch name={{ item.public_dns_name }}
  with_items: '{{ ec2.instances }}'

- name: streaming workers
  ec2:
    key_name: baba
    instance_type: m1.small
    image: emi-2a255279
    instance_tags:
      worker: streaming
    count_tag:
      worker: streaming
    group:
      - default
      - worker
    exact_count: 1
    monitoring: true
    volumes:
      - device_name: /dev/sda
        volume_size: 5
        delete_on_termination: true
    assign_public_ip: no
  register: ec2

- name: Add new instance to host group
  add_host: groups=tag_worker_streaming name={{ item.public_dns_name }}
  with_items: '{{ ec2.instances }}'

- name: mysql database
  ec2:
    key_name: baba
    instance_type: m1.small
    image: emi-2a255279
    instance_tags:
      db: mysql
      service: mysql
    count_tag:
      db: mysql
    group:
      - default
      - mysql
    exact_count: 1
    monitoring: true
    volumes:
      - device_name: /dev/sda
        volume_size: 5
        delete_on_termination: true
    assign_public_ip: no
  register: ec2

- name: Add new instance to host group
  add_host: groups=tag_db_mysql name={{ item.public_dns_name }}
  with_items: '{{ ec2.instances }}'

- name: web servers
  ec2:
    key_name: baba
    instance_type: m3.xlarge
    image: emi-2a255279
    instance_tags:
      web: apache
      service: web
    count_tag:
      web: apache
    exact_count: 1
    group:
      - default
      - www
    monitoring: true
    volumes:
      - device_name: /dev/sda
        volume_size: 15
        delete_on_termination: true
    assign_public_ip: no
  register: ec2

- name: Add new instance to host group
  add_host: groups=tag_index_elasticsearch name={{ item.public_dns_name }}
  with_items: '{{ ec2.instances }}'

